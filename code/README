-------------------------------------------------------------------
Bioassay similarity measurements 
Last modify: 06/15/2017
Author: Junfeng Liu
-------------------------------------------------------------------


--------------------------------------------
General information
--------------------------------------------
	This code provides how the similarity of two bioassays are measured for the usage of 
	"Multi-Assay-based Compound Prioritization via Assistance Utilization: a Machine Learning Framework".
	For usage of svm_learn and svm_classify, please visit the original author's website at http://svmlight.joachims.org.

--------------------------------------------
Iuput file
--------------------------------------------
	The input files required to calculate the bioassay similarities are the bioassays.
	In order to calculate the similarity, two bioassay files are needed.
	
	A bioassay file should be formatted as follows:
		- Each row represents a compound in the bioassay.
		- Each row has various fields separated by a space, and contains the following information of the corresponding compound:
			- The 1st field has the ranking score of the compound. 
			  Ranking scores could be represented by integers or floating numbers. 
			  A higher ranking score indicates that such compound should be ranked higher. 
			  Thus please do not use IC50 values of the compounds directly.
			- The 2nd filed has the query ID. 
			  The query ID has the bioassay ID. 
			  The query ID field is expressed as "qid:xxx", where "xxx" is the bioassay ID.
			- The the rest of fields represent the compound fingerprints/features.
			  The feature of a compound is represented in a "dimension:value" group sparse format, where the "dimension" and "value" are separated by a colon ":", and each "dimension:value" group is separated by a space.
			  The "dimension" should be an integer. The "value" could be either a integer or a floating number.

	For example, a bioassay has 3 compounds and its bioassay ID is "123". The input file for this bioassay has the following three lines in the quotation marks:
	"3 qid:123 1:1 2:1 3:1 4:1"
	"2 qid:123 1:1 5:1 6:1"
	"1 qid:123 4:1 5:1 6:1 7:1 8:1"


--------------------------------------------
Usage
--------------------------------------------
	Please download all files in the code directory, including all *.py files and two executables (svm_learn and svm_classify).
	For the executables, we have provided a pre-compiled version with Tanimoto kernel. 
	You are free to compile with your preferred kernel from the original author's website at http://svmlight.joachims.org.


	The following functions return the similarity between two bioassays with various methods. The following instructions explain the usage of each function: 
	- Profiling-based bioassay similarities:
		- average pairwise similarity: calculate similarity by average pairwise compound similarity
			- command:
				pairwise_sim(bioAssay1, bioAssay2)
			- parameters:
				- bioAssay1: (string) path to bioassay 1
				- bioAssay2: (string) path to bioassay 2

		- profiling-based compound identity sequence alignment: calculate similarity by profiling based sequence alignment by compound ID
			- command:
				p_cid_sim(bioAssay1, bioAssay2, match_score, mismatch_score, gap_score, disc)
			- parameters:
				- bioAssay1: (string) path to bioAssay1
				- bioAssay2: (string) path to bioAssay2
				- match_score: (float) user-defined score for a matched step
				- mismatch_score: (float) user-defined score for a mismatched step
				- gap_score: (float) user-defined score for a gap step
				- disc : (bool) if True, alignment score is discounted by position

		- profiling-based compound similarity sequence alignment: calculate similarity by profiling based sequence alignment by compound similarity
			- command:
				p_csim_sim(bioAssay1, bioAssay2, gap_score, disc)
			- parameters:
				- bioAssay1: (string) path to bioAssay1
				- bioAssay2: (string) path to bioAssay2
				- gap_score: (float) user-defined score for a gap step
				- disc : (bool) if True, alignment score is discounted by position

	- Cross-ranking-based bioassay similarities:
		- cross-ranking-based CI similarity:calculate similarity by cross ranking CI
			- command:
				xci_sim(bioAssay1, bioAssay2, model_file, pred_file, c, t)
			- parameters:
				- bioAssay1: (string) path to bioassay 1
				- bioAssay2: (string) path to bioassay 2
				- model_file: (string) path to save bioassay 1's model
				- pred_file: (string) path to save bioassay 2' prediction with bioassay 1's model
				- c: (float) parameter '-c' for SVM light to train bioassay 1's model
				- t: (int) parameter '-t' for SVM light to train bioassay 1's model

		- cross-ranking-based compound identity sequence alignment: calculate similarity by cross ranking based sequence alignment by compound ID
			- command:
				x_cid_sim(bioAssay1, bioAssay2, model_file, pred_file, c, t, match_score, mismatch_score, gap_score, disc)
			- parameters:
				- bioAssay1: (string) path to bioAssay1
				- bioAssay2: (string) path to bioAssay2
				- model_file: (string) path to save bioassay 1's model
				- pred_file: (string) path to save bioassay 2' prediction with bioassay 1's model
				- c: (float) parameter '-c' for SVM light to train bioassay 1's model
				- t: (int) parameter '-t' for SVM light to train bioassay 1's model
				- match_score: (float) user-defined score for a matched step
				- mismatch_score: (float) user-defined score for a mismatched step
				- gap_score: (float) user-defined score for a gap step
				- disc: (bool) if True, alignment score is discounted by position
				
		- cross-ranking-based compound similarity sequence alignment: calculate similarity by cross ranking based sequence alignment by compound similarity
			- command:
				x_csim_sim(bioAssay1, bioAssay2, model_file, pred_file, c, t, gap_score, disc)
			- parameters:
				- bioAssay1: (string) path to bioAssay1
				- bioAssay2: (string) path to bioAssay2
				- model_file: (string) path to save bioassay 1's model
				- pred_file: (string) path to save bioassay 2' prediction with bioassay 1's model
				- c: (float) parameter '-c' for SVM light to train bioassay 1's model
				- t: (int) parameter '-t' for SVM light to train bioassay 1's model
				- disc: (bool) if True, alignment score is discounted by position


	The following is an example of using this library.
	1. Launch Python from terminal, or create your Python script file.

	2. Import the code files in your command line, or your Python script file, by the following command:
		from assay_sim import *

	3. Calculate the bioassay similarity with the commands provided above, according to your preferred method. The functions will return the similarities of two bioassays with corresponding methods. Here is an example of profiling-based bioassay similarity of average pairwise compound similarity, between bioassay 61152 (path: "61152.txt") and bioassay 61153 (path: "61153.txt"):
		pairwise_sim("61152.txt", "61153.txt")

--------------------------------------------
Comments and Bug Reports
--------------------------------------------
Any kind of comments, suggestions, or bug reports are welcome and appreciated.
Please feel free to contact the author: liujunf AT iupui DOT edu.
















